<configuration debug="true">


	<!-- configuration for sending logs to email -->
	<appender name="emailAppender"
		class="ch.qos.logback.classic.net.SMTPAppender">
		<smtpHost>smtp.gmail.com</smtpHost>
		<smtpPort>587</smtpPort>
		<STARTTLS>true</STARTTLS>
		<username>kitcat2622@gmail.com</username>
		<password>bznyakslsbborjxs</password>
		<to>kitcat2622@gmail.com</to>
		<from>kitcat2622@gmail.com</from>
		<subject>Exception in Application</subject>
		<layout class="ch.qos.logback.classic.html.HTMLLayout">
			<pattern>%date %-5level %logger{35} - %msg</pattern>
			<charset>UTF-8</charset>
		</layout>
	</appender>

	<!-- configuration for deiplay logs on console -->
	<appender name="STDOUTAppender"
		class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%date [%thread] %-5level %logger{36} - %msg%n
			</pattern>
		</encoder>
	</appender>

	<!-- configuration for write logs in files -->
	<appender name="fileAppender"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>log/application.log</file>
		<encoder
			class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>%date %-5level %logger{35} - %msg%n</pattern>
		</encoder>

		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- rollover daily and when the file reaches 10 MegaBytes -->
			<fileNamePattern>log/application.%d{yyyy-MM-dd}.log</fileNamePattern>
		</rollingPolicy>
	</appender>

	<!-- configuration for write logs in files using levels -->

	<!-- configuration for write Warn logs in files -->
	<appender name="warnAppender"
		class="ch.qos.logback.core.FileAppender">
		<file>log/warn.log</file>
		<encoder>
			<pattern>%date %-5level %logger{35} - %msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>WARN</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- configuration for write error logs in files -->
	<appender name="errorAppender"
		class="ch.qos.logback.core.FileAppender">
		<file>log/error.log</file>
		<encoder>
			<pattern>%date %-5level %logger{35} - %msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- configuration for write info logs in files -->
	<appender name="infoAppender"
		class="ch.qos.logback.core.FileAppender">
		<file>log/info.log</file>
		<encoder>
			<pattern>%date %-5level %logger{35} - %msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- configuration for write debug logs in files -->
	<appender name="debugAppender"
		class="ch.qos.logback.core.FileAppender">
		<file>log/debug.log</file>
		<encoder>
			<pattern>%date %-5level %logger{35} - %msg%n</pattern>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>DEBUG</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- Define the custom converter to format exceptions -->
	<!-- conversionRule conversionWord="ex" converterClass="com.info.restcontroller.EmailController"></conversionRule -->

	<!-- root level configuration for send email, write file and print logs on 
		console by application's custom log level -->
	<root level="error">
		<appender-ref ref="emailAppender" />
		<appender-ref ref="fileAppender" />
		<appender-ref ref="STDOUTAppender" />
	</root>

	<!-- configuration for write logs using levels in files -->
	<logger name="com.info" level="trace" addactivity="false">
		<appender-ref ref="warnAppender" level="WARN" />
		<appender-ref ref="errorAppender" level="ERROR" />
		<appender-ref ref="infoAppender" level="INFO" />
		<appender-ref ref="debugAppender" level="DEBUG" />
	</logger>

</configuration>